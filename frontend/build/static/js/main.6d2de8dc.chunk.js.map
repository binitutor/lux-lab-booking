{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/Spinner/Spinner.js","components/Bookings/BookingList/BookingList.js","components/Bookings/BookingsChart/BookingsChart.js","components/Bookings/BookingsControls/BookingsControls.js","pages/Bookings.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","pages/Events.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","AuthPage","props","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","context","catch","err","console","log","createRef","className","onSubmit","this","htmlFor","type","id","ref","onClick","Component","contextType","AuthContext","spinner","bookingList","bookings","map","booking","title","Date","createdAt","toLocaleDateString","onDelete","bind","_id","BOOKINGS_BUCKETS","Cheap","min","max","Normal","Expensive","bookingsChart","chartData","labels","datasets","values","bucket","filteredBookingsCount","reduce","prev","price","push","fillColor","strokeColor","highlightFill","highlightStroke","style","textAlign","bookingsControl","activeOutputType","onChange","BookingsPage","isLoading","outputType","fetchBookings","Authorization","deleteBookingHandler","bookingId","filter","changeOutputTypeHandler","content","Fragment","BookingsChart","modal","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","date","creatorId","onDetail","eventId","eventList","events","authUserId","creator","onViewDetail","EventsPage","creating","selectedEvent","isActive","startCreateEventHandler","modalConfirmHandler","titleElRef","priceElRef","dateElRef","description","descriptionElRef","desc","updatedEvents","createEvent","modalCancelHandler","showDetailHandler","find","e","bookEventHandler","fetchEvents","rows","mainNavigation","Consumer","to","App","Provider","from","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d2de8dc.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    userId: null,\n    login: (token, userId, tokenExpiration) => {},\n    logout: () => {}\n});","import React, { Component } from 'react';\n\nimport './Auth.css';\nimport AuthContext from '../context/auth-context';\n\nclass AuthPage extends Component {\n  state = {\n    isLogin: true\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  switchModeHandler = () => {\n    this.setState(prevState => {\n      return { isLogin: !prevState.isLogin };\n    });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    const email = this.emailEl.current.value;\n    const password = this.passwordEl.current.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query Login($email: String!, $password: String!) {\n          login(email: $email, password: $password) {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `,\n      variables: {\n        email: email,\n        password: password\n      }\n    };\n\n    if (!this.state.isLogin) {\n      requestBody = {\n        query: `\n          mutation CreateUser($email: String!, $password: String!) {\n            createUser(userInput: {email: $email, password: $password}) {\n              _id\n              email\n            }\n          }\n        `,\n        variables: {\n          email: email,\n          password: password\n        }\n      };\n    }\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.data.login.token) {\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration\n          );\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">E-Mail</label>\n          <input type=\"email\" id=\"email\" ref={this.emailEl} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\" onClick={this.switchModeHandler}>\n            Switch to {this.state.isLogin ? 'Signup' : 'Login'}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AuthPage;\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"lds-dual-ring\" />\n  </div>\n);\n\nexport default spinner;\n","import React from 'react';\n\nimport './BookingList.css';\n\nconst bookingList = props => (\n  <ul className=\"bookings__list\">\n    {props.bookings.map(booking => {\n      return (\n        <li key={booking._id} className=\"bookings__item\">\n          <div className=\"bookings__item-data\">\n            {booking.event.title} -{' '}\n            {new Date(booking.createdAt).toLocaleDateString()}\n          </div>\n          <div className=\"bookings__item-actions\">\n            <button className=\"btn\" onClick={props.onDelete.bind(this, booking._id)}>Cancel</button>\n          </div>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nexport default bookingList;\n","import React from 'react';\nimport { Bar as BarChart } from 'react-chartjs';\n\nconst BOOKINGS_BUCKETS = {\n  Cheap: {\n    min: 0,\n    max: 100\n  },\n  Normal: {\n    min: 100,\n    max: 200\n  },\n  Expensive: {\n    min: 200,\n    max: 10000000\n  }\n};\n\nconst bookingsChart = props => {\n  const chartData = { labels: [], datasets: [] };\n  let values = [];\n  for (const bucket in BOOKINGS_BUCKETS) {\n    const filteredBookingsCount = props.bookings.reduce((prev, current) => {\n      if (\n        current.event.price > BOOKINGS_BUCKETS[bucket].min &&\n        current.event.price < BOOKINGS_BUCKETS[bucket].max\n      ) {\n        return prev + 1;\n      } else {\n        return prev;\n      }\n    }, 0);\n    values.push(filteredBookingsCount);\n    chartData.labels.push(bucket);\n    chartData.datasets.push({\n      // label: \"My First dataset\",\n      fillColor: 'rgba(220,220,220,0.5)',\n      strokeColor: 'rgba(220,220,220,0.8)',\n      highlightFill: 'rgba(220,220,220,0.75)',\n      highlightStroke: 'rgba(220,220,220,1)',\n      data: values\n    });\n    values = [...values];\n    values[values.length - 1] = 0;\n  }\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <BarChart data={chartData} />\n    </div>\n  );\n};\n\nexport default bookingsChart;\n","import React from 'react';\n\nimport './BookingsControls.css';\n\nconst bookingsControl = props => {\n  return (\n    <div className=\"bookings-control\">\n      <button\n        className={props.activeOutputType === 'list' ? 'active' : ''}\n        onClick={props.onChange.bind(this, 'list')}\n      >\n        List\n      </button>\n      <button\n        className={props.activeOutputType === 'chart' ? 'active' : ''}\n        onClick={props.onChange.bind(this, 'chart')}\n      >\n        Chart\n      </button>\n    </div>\n  );\n};\n\nexport default bookingsControl;\n","import React, { Component } from 'react';\n\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport BookingList from '../components/Bookings/BookingList/BookingList';\nimport BookingsChart from '../components/Bookings/BookingsChart/BookingsChart';\nimport BookingsControls from '../components/Bookings/BookingsControls/BookingsControls';\n\nclass BookingsPage extends Component {\n  state = {\n    isLoading: false,\n    bookings: [],\n    outputType: 'list'\n  };\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    this.fetchBookings();\n  }\n\n  fetchBookings = () => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            bookings {\n              _id\n             createdAt\n             event {\n               _id\n               title\n               date\n               price\n             }\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const bookings = resData.data.bookings;\n        this.setState({ bookings: bookings, isLoading: false });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  deleteBookingHandler = bookingId => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          mutation CancelBooking($id: ID!) {\n            cancelBooking(bookingId: $id) {\n            _id\n             title\n            }\n          }\n        `,\n      variables: {\n        id: bookingId\n      }\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState(prevState => {\n          const updatedBookings = prevState.bookings.filter(booking => {\n            return booking._id !== bookingId;\n          });\n          return { bookings: updatedBookings, isLoading: false };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  changeOutputTypeHandler = outputType => {\n    if (outputType === 'list') {\n      this.setState({ outputType: 'list' });\n    } else {\n      this.setState({ outputType: 'chart' });\n    }\n  };\n\n  render() {\n    let content = <Spinner />;\n    if (!this.state.isLoading) {\n      content = (\n        <React.Fragment>\n          <BookingsControls\n            activeOutputType={this.state.outputType}\n            onChange={this.changeOutputTypeHandler}\n          />\n          <div>\n            {this.state.outputType === 'list' ? (\n              <BookingList\n                bookings={this.state.bookings}\n                onDelete={this.deleteBookingHandler}\n              />\n            ) : (\n              <BookingsChart bookings={this.state.bookings} />\n            )}\n          </div>\n        </React.Fragment>\n      );\n    }\n    return <React.Fragment>{content}</React.Fragment>;\n  }\n}\n\nexport default BookingsPage;\n","import React from 'react';\n\nimport './Modal.css';\n\nconst modal = props => (\n  <div className=\"modal\">\n    <header className=\"modal__header\">\n      <h1>{props.title}</h1>\n    </header>\n    <section className=\"modal__content\">{props.children}</section>\n    <section className=\"modal__actions\">\n      {props.canCancel && (\n        <button className=\"btn\" onClick={props.onCancel}>\n          Cancel\n        </button>\n      )}\n      {props.canConfirm && (\n        <button className=\"btn\" onClick={props.onConfirm}>\n          {props.confirmText}\n        </button>\n      )}\n    </section>\n  </div>\n);\n\nexport default modal;\n","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = props => <div className=\"backdrop\"></div>;\n\nexport default backdrop;","import React from 'react';\n\nimport './EventItem.css';\n\nconst eventItem = props => (\n  <li key={props.eventId} className=\"events__list-item\">\n    <div>\n      <h1>{props.title}</h1>\n      <h2>\n        ${props.price} - {new Date(props.date).toLocaleDateString()}\n      </h2>\n    </div>\n    <div>\n      {props.userId === props.creatorId ? (\n        <p>Your the owner of this event.</p>\n      ) : (\n        <button className=\"btn\" onClick={props.onDetail.bind(this, props.eventId)}>\n          View Details\n        </button>\n      )}\n    </div>\n  </li>\n);\n\nexport default eventItem;\n","import React from 'react';\n\nimport EventItem from './EventItem/EventItem';\nimport './EventList.css';\n\nconst eventList = props => {\n  const events = props.events.map(event => {\n    return (\n      <EventItem\n        key={event._id}\n        eventId={event._id}\n        title={event.title}\n        price={event.price}\n        date={event.date}\n        userId={props.authUserId}\n        creatorId={event.creator._id}\n        onDetail={props.onViewDetail}\n      />\n    );\n  });\n\n  return <ul className=\"event__list\">{events}</ul>;\n};\n\nexport default eventList;\n","import React, { Component } from 'react';\n\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport EventList from '../components/Events/EventList/EventList';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Events.css';\n\nclass EventsPage extends Component {\n  state = {\n    creating: false,\n    events: [],\n    isLoading: false,\n    selectedEvent: null\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.titleElRef = React.createRef();\n    this.priceElRef = React.createRef();\n    this.dateElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  startCreateEventHandler = () => {\n    this.setState({ creating: true });\n  };\n\n  modalConfirmHandler = () => {\n    this.setState({ creating: false });\n    const title = this.titleElRef.current.value;\n    const price = +this.priceElRef.current.value;\n    const date = this.dateElRef.current.value;\n    const description = this.descriptionElRef.current.value;\n\n    if (\n      title.trim().length === 0 ||\n      price <= 0 ||\n      date.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n      return;\n    }\n\n    const event = { title, price, date, description };\n    console.log(event);\n\n    const requestBody = {\n      query: `\n          mutation CreateEvent($title: String!, $desc: String!, $price: Float!, $date: String!) {\n            createEvent(eventInput: {title: $title, description: $desc, price: $price, date: $date}) {\n              _id\n              title\n              description\n              date\n              price\n            }\n          }\n        `,\n        variables: {\n          title: title,\n          desc: description,\n          price: price,\n          date: date\n        }\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState(prevState => {\n          const updatedEvents = [...prevState.events];\n          updatedEvents.push({\n            _id: resData.data.createEvent._id,\n            title: resData.data.createEvent.title,\n            description: resData.data.createEvent.description,\n            date: resData.data.createEvent.date,\n            price: resData.data.createEvent.price,\n            creator: {\n              _id: this.context.userId\n            }\n          });\n          return { events: updatedEvents };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, selectedEvent: null });\n  };\n\n  fetchEvents() {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            events {\n              _id\n              title\n              description\n              date\n              price\n              creator {\n                _id\n                email\n              }\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const events = resData.data.events;\n        if (this.isActive) {\n          this.setState({ events: events, isLoading: false });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  showDetailHandler = eventId => {\n    this.setState(prevState => {\n      const selectedEvent = prevState.events.find(e => e._id === eventId);\n      return { selectedEvent: selectedEvent };\n    });\n  };\n\n  bookEventHandler = () => {\n    if (!this.context.token) {\n      this.setState({ selectedEvent: null });\n      return;\n    }\n    console.log(this.state.selectedEvent)\n    const requestBody = {\n      query: `\n          mutation BookEvent($id: ID!) {\n            bookEvent(eventId: $id) {\n              _id\n             createdAt\n             updatedAt\n            }\n          }\n        `,\n        variables: {\n          id: this.state.selectedEvent._id\n        }\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState({ selectedEvent: null });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\n        {this.state.creating && (\n          <Modal\n            title=\"Add Event\"\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.modalConfirmHandler}\n            confirmText=\"Confirm\"\n          >\n            <form>\n              <div className=\"form-control\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" ref={this.titleElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"price\">Price</label>\n                <input type=\"number\" id=\"price\" ref={this.priceElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"description\">Description</label>\n                <textarea\n                  id=\"description\"\n                  rows=\"4\"\n                  ref={this.descriptionElRef}\n                />\n              </div>\n            </form>\n          </Modal>\n        )}\n        {this.state.selectedEvent && (\n          <Modal\n            title={this.state.selectedEvent.title}\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.bookEventHandler}\n            confirmText={this.context.token ? 'Book' : 'Confirm'}\n          >\n            <h1>{this.state.selectedEvent.title}</h1>\n            <h2>\n              ${this.state.selectedEvent.price} -{' '}\n              {new Date(this.state.selectedEvent.date).toLocaleDateString()}\n            </h2>\n            <p>{this.state.selectedEvent.description}</p>\n          </Modal>\n        )}\n        {this.context.token && (\n          <div className=\"events-control\">\n            <p>Share your own Events!</p>\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>\n              Create Event\n            </button>\n          </div>\n        )}\n        {this.state.isLoading ? (\n          <Spinner />\n        ) : (\n          <EventList\n            events={this.state.events}\n            authUserId={this.context.userId}\n            onViewDetail={this.showDetailHandler}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EventsPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>EasyEvent</h1>\n          </div>\n          <nav className=\"main-navigation__items\">\n            <ul>\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/auth\">Authenticate</NavLink>\n                </li>\n              )}\n              <li>\n                <NavLink to=\"/events\">Events</NavLink>\n              </li>\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/bookings\">Bookings</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import './App.css';\nimport React, { Component } from 'react';\n\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/Auth';\nimport BookingsPage from './pages/Bookings';\nimport EventsPage from './pages/Events';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\n\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null\n  };\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              login: this.login,\n              logout: this.logout\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\n                {this.state.token && (\n                  <Redirect from=\"/auth\" to=\"/events\" exact />\n                )}\n                {!this.state.token && (\n                  <Route path=\"/auth\" component={AuthPage} />\n                )}\n                <Route path=\"/events\" component={EventsPage} />\n                {this.state.token && (\n                  <Route path=\"/bookings\" component={BookingsPage} />\n                )}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}